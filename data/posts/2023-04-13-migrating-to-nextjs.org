#+TITLE: Using Next.js for static sites
#+TAGS: e-ink hardware workflow

Good news everyone. I can post here again, thank you Next.js. If you check the history of post dates here you can see some large gaps between updates. Until recently this site was powered by [[https://jekyllrb.com/][Jekyll]] and hosted on Github static pages. Jekyll had high entropy and every-time I wanted to do a spontaneous post I would have to update Jekyll and all its dependencies and usually update Ruby. Oftentimes this software entropy maintenance would kill my creative energy to make new content or like recently flat out block me from pushing updates. I have now migrated this blog to Next.js and still using Github static pages to host. Next.js has a static site feature similar to Jekyll. I'm hoping it has less entropy.

I am a heavy user of emacs and [[https://orgmode.org/][orgmode]]. I keep a lot of text data in orgmode, journals, agendas, task lists, notes. This blog post is written in orgmode. I could do a seperate blog post on my orgmode usage. It really some Alan Kay human computer augmentation level stuff. Next.js makes it very easy to convert orgmode files into HTML websites. Next.js makes it easy to fetch any data source and convert it to web content. I have now built up a some shared publishing code for Next.js that handles both Markdown and orgmode files and converts them to web content. I am using this to keep my web properties updated with fresh content.
